{"text": "---\nid: 123\nstate: approved\ncreated: 2019-05-12\nplacement:\n  category: resource-design\n  order: 30\n---\n\n# Resource types\n\nMost APIs expose _resources_ (their primary nouns) which users are able to\ncreate, retrieve, and manipulate. APIs are allowed to name their resource types\nas they see fit, and are only required to ensure uniqueness within that API.\nThis means that it is possible (and often desirable) for different APIs to use\nthe same type name. For example, a Memcache and Redis API would both want to\nuse `Instance` as a type name.\n\nWhen mapping the relationships between APIs and their resources, however, it\nbecomes important to have a single, globally-unique type name. Additionally,\ntools such as Kubernetes or GraphQL interact with APIs from multiple providers.\n\n## Terminology\n\nIn the guidance below, we use the following terms:\n\n- **Service Name:** This is the name defined in the [service configuration][].\n  This usually (but not necessarily) matches the hostname that users use to\n  call the service. Example: `pubsub.googleapis.com`. This is equivalent to an\n  [API Group][] in Kubernetes.\n- **Type:** This is the name used for the type within the API. This *should*\n  match the name of the protobuf message. This is equivalent to an [Object][] in\n  Kubernetes.\n\n## Guidance\n\nAPIs **must** define a resource type for each resource in the API, according to\nthe following pattern: `{Service Name}/{Type}`. The type name **must**:\n\n- Start with an uppercase letter.\n- Only contain alphanumeric characters.\n- Be of the singular form of the noun.\n- Use PascalCase (UpperCamelCase).\n\n### Examples\n\nExamples of resource types include:\n\n- `pubsub.googleapis.com/Topic`\n- `pubsub.googleapis.com/Subscription`\n- `spanner.googleapis.com/Database`\n- `spanner.googleapis.com/Instance`\n- `networking.istio.io/Instance`\n\n### Annotating resource types\n\nAPIs **should** annotate the resource types for each resource in the API using\nthe [`google.api.resource`][resource] annotation:\n\n```proto\n// A representation of a Pub/Sub topic.\nmessage Topic {\n  option (google.api.resource) = {\n    type: \"pubsub.googleapis.com/Topic\"\n    pattern: \"projects/{project}/topics/{topic}\"\n    singular: \"topic\"\n    plural: \"topics\"\n  };\n\n  // Name and other fields...\n}\n```\n\n- Patterns **must** correspond to the [resource name][aip-122].\n- Pattern variables (the segments within braces) **must** use `snake_case`, and\n  **must not** use an `_id` suffix.\n- Pattern variables **must** conform to the format `[a-z][_a-z0-9]*[a-z0-9]`.\n- Pattern variables **must** be unique within any given pattern. (e.g.\n  `projects/{abc}/topics/{abc}` is invalid; this is usually a natural\n  corollary of collection identifiers being unique within a pattern.)\n- Singular **must** be the lower camel case of the type.\n  - Pattern variables **must** be the singular form of the resource type e.g.\n    a pattern variable representing a `Topic` resource ID is named `{topic}`.\n- Plural **must** be the lower camel case plural of the singular.\n  - Pattern collection identifier segments **must** match the plural of the\n    resources, except in the case of [nested collections][].\n\n#### Pattern uniqueness\n\nWhen multiple patterns are defined within a resource, these patterns **must**\nbe mutually unique, where uniqueness is defined as being by-character identical\nonce all resource ID path segments have been removed, leaving all `/`\nseparators.\n\nTherefore the following two patterns **must not** be defined within the same\nresource:\n\n- `user/{user}`\n- `user/{user_part_1}~{user_part_2}`\n\n## Rationale\n\n### Singular and Plural\n\nWell-defined singular and plurals of a resource enable clients to determine the\nproper name to use in code and documentation.\n\nlowerCamelCase can be translated into other common forms of a resource name\nsuch as UpperCamelCase and snake_case.\n\n<!-- prettier-ignore-start -->\n[aip-122]: ./0122.md\n[API Group]: https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-groups\n[nested collections]: ./0122.md#collection-identifiers\n[Object]: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n[resource]: https://github.com/googleapis/googleapis/blob/master/google/api/resource.proto\n[service configuration]: https://github.com/googleapis/googleapis/blob/master/google/api/service.proto\n<!-- prettier-ignore-end -->\n\n## Changelog\n\n- **2023-09-19**: Prohibit duplicate pattern variables.\n- **2023-05-06**: Adding requirement of singular and plural.\n- **2023-01-28**: Clarifying guidance for the resource type name.\n- **2022-10-28**: Added pattern variable format guidance.\n- **2020-05-14**: Added pattern uniqueness.\n- **2019-12-05**: Added guidance on patterns.\n- **2019-07-17**: Fleshed out the annotation example somewhat.\n"}