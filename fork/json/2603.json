{"text": "---\nid: 2603\nscope: cloud\nstate: approved\ncreated: 2019-06-13\nplacement:\n  category: sdk\n---\n\n# List command arguments\n\nSome list requests take argument(s) for the parent collection in which to list\nresources. For example, suppose an API has book resources belonging to publisher\nresources, and consider a request to list books belonging to a publisher:\n\n```proto\nmessage ListBooksRequest {\n  // The parent, which owns this collection of books.\n  // Format: publishers/{publisher}\n  string parent = 1 [\n    (google.api.field_behavior) = REQUIRED,\n    (google.api.resource_reference) = {\n      child_type: \"library.googleapis.com/Book\"\n    }];\n\n  // The maximum number of items to return.\n  int32 page_size = 2;\n\n  // The next_page_token value returned from a previous List request, if any.\n  string page_token = 3;\n}\n```\n\nFor the corresponding gcloud list command, we have the choice between\n`gcloud publishers books list PUBLISHER` (positional) and\n`gcloud publishers books list --publisher=PUBLISHER` (flag).\n\n## Guidance\n\nAll list command arguments should be flags, not positionals. In gcloud's\nresource model, command groups generally correspond to resources, and the\npositional arguments for commands in a group are reserved for those resources.\nIn the case of a list command that takes an argument, the argument will refer\nto the parent resource and not the command group's resource; therefore, it\nshould be a flag instead of a positional.\n\nIn the example above, the list command takes an argument for a publisher. Commands\nin the `books` command group should reserve positional arguments for book\nresources. Thus, the publisher argument for the list command should be a flag:\n\n```\ngcloud publishers books list --publisher=PUBLISHER\n```\n\n## Changelog\n\n- **2020-09-23**: Changed the examples from \"shelves\" to \"publishers\", to\n  present a better example of resource ownership.\n"}