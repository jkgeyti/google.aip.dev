{"text": "---\nid: 4111\nscope: auth\nstate: approved\ncreated: 2020-07-23\n---\n\n# Self-signed JWT\n\nSelf-signed JWT (JSON Web Token) for Google APIs was introduced in 2014 to\nprovide a more efficient auth stack for Cloud APIs being accessed via service\naccounts by bypassing the intermediate step of exchanging client assertions for\nOAuth tokens. A self-signed JWT is a spec-conforming JWT that is locally signed\nby the service account private key. Since many Cloud APIs accept self-signed JWT\nin place of traditional access tokens, it is now considered a standard\nauthentication method.\n\n**Note:** Because this AIP describes guidance and requirements in a\nlanguage-neutral way, it uses generic terminology which may be imprecise or\ninappropriate in certain languages or environments.\n\n## Guidance\n\nThis section describes the general guidance of supporting self-signed\nJWT as a means of authentication.\n\n### Application Default Credentials\n\nSupporting self-signed JWT is considered a part of [application default\ncredentials][0]. To understand the overall flow, please read [AIP-4110][0].\n\n### Scope vs. Audience\n\nIn the past, the self-signed JWT was only applicable with `audience`. Recently,\nthe usage of the \"scope\" claim in self-signed JWTs is now allowed in the Google\nCloud auth ecosystem, which makes the self-signed JWT usable with both audience\nand scope. However, caller **must** not specify scope and audience at the same\ntime to prevent potential conflicts.\n\n#### Opt-in Strategy\n\nCurrently, this scope support for JWT is gated behind a configurable boolean\noption `UseJWTAccessWithScope`(the actual naming may vary depending on the\nprogramming language), as the feature is not supported for all Cloud API service\nbackends. The default value of this boolean is false, and to use scope with\nself-signed JWT, caller **must** specify this option as `true`. Otherwise the\nOAuth exchange flow **should** be used instead when scope is provided. The API\nclients **should** try to automatically determine this option with the\nappropriate value based on the APIs, so this complexity is not exposed to the\nupper-layer developer.\n\n### Default Authentication Method For Service Account Keys\n\nConsidering its better efficiency and reliability comparing with OAuth flow\n(bypassing the exchanging step), [ADC][0] **should** use self-signed JWT as the\ndefault authentication flow when service account key is provided as the source\ncredential.\n\nIn other words, [ADC][0] **should** choose the OAuth flow over the self-signed\nJWT flow only if scope is provided and JWT is not enabled via\n`UseJWTAccessWithScope`.\n\n### Expected Behavior\n\nTo support self-signed JWT, the auth libraries **must** follow the steps below:\n\n1\\. Load the [service account ID JSON file][2]. Please note that the self-signed\nJWT only supports service account ID credential type.\n\n2\\. Using any standard JWT library, such as one found at [jwt.io][1], create a JWT\nwith a header and payload like the following examples:\n\n(1) Example of using audience:\n\n```json\n{\n  \"alg\": \"RS256\",\n  \"typ\": \"JWT\",\n  \"kid\": \"abcdef1234567890\"\n}\n{\n  \"iss\": \"123456-compute@developer.gserviceaccount.com\",\n  \"sub\": \"123456-compute@developer.gserviceaccount.com\",\n  \"aud\": \"https://pubsub.googleapis.com/\",\n  \"iat\": 1511900000,\n  \"exp\": 1511903600\n}\n```\n\n(2) Example of using scope:\n\n```json\n{\n  \"alg\": \"RS256\",\n  \"typ\": \"JWT\",\n  \"kid\": \"abcdef1234567890\"\n}\n{\n  \"iss\": \"123456-compute@developer.gserviceaccount.com\",\n  \"sub\": \"123456-compute@developer.gserviceaccount.com\",\n  \"scope\": \"https://www.googleapis.com/auth/cloud-platform\",\n  \"iat\": 1511900000,\n  \"exp\": 1511903600\n}\n```\n\n* For the `kid` field in the header, specify the service account's private key\nID. You can find this value in the `private_key_id` field of the service account\nJSON file.\n\n* For the `iss` and `sub` fields, specify the service account's email address.\nYou can find this value in the `client_email` field of the service account JSON\nfile.\n\n* For the `aud` field, specify the audience. The default audience value\n**should** be `https://[SERVICE]/`. (e.g. `https://pubsub.googleapis.com/`)\n\n* For the `scope` field, specify the scope. Please note that `aud` and `scope`\ncannot be specified at the same time.\n\n* For the `iat` field, specify the current Unix time, and for the `exp` field,\nthe value **must** be exactly 3600 seconds later, when the JWT will expire.\n\n3\\. Sign the JWT with RSA-256 using the private key found in the service\naccount JSON file.\n\n## Changelog\n\n- **2019-08-13**: Add a section for application default credential.\n- **2021-06-02**: Update scope support.\n\n<!-- prettier-ignore-start -->\n[0]: https://google.aip.dev/auth/4110\n[1]: https://jwt.io/#libraries-io\n[2]: https://google.aip.dev/auth/4112\n<!-- prettier-ignore-end -->\n"}