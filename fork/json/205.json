{"text": "---\nid: 205\nstate: approved\ncreated: 2019-02-18\nplacement:\n  category: process\n  order: 20\nredirect_from: /beta-blocker\n---\n\n# Beta-blocking changes\n\nAPIs often release an Alpha version of their API in order to get early feedback\nfrom customers. This API is provisional and can change many times before the\nimportant feedback is incorporated and the API is made stable for Beta.\n\nSince the purpose of Alpha is to gather feedback, the API does not need to be\nperfect yet, and it's not strictly necessary for API authors to address every\nusability concern or address every point in the API standards. Often, API\nauthors and API reviewers will not agree on the best design, and the best way\nto find out is by having users try out the API.\n\nHowever, once the feedback has been collected and the API is going to be\npromoted to Beta, usability concerns and style issues do need to be addressed.\nIn order to ensure that these issues are not forgotten, they should be\nexplicitly documented in the API.\n\n## Guidance\n\nIf an API has usability concerns or violates API standards, and the present\ndesign should receive additional scrutiny before being carried through to the\nBeta version, there **must** be an internal comment linking to this document\nusing its descriptive link ([aip.dev/beta-blocker]()) to ensure that the design\nis corrected before the API is released to Beta.\n\nThe comment **must** also indicate what kind of change should be made for Beta.\nFor example:\n\n```proto\nmessage InputConfig {\n  // Parameters for input.\n  // (-- aip.dev/beta-blocker: Convert well-known parameters into explicit\n  //     fields before the Beta launch. --)\n  map<string, string> parameters = 1;\n}\n```\n\nIf an exception to API standards _does_ need to be carried through to Beta and\nGA, see [AIP-200][].\n\n[aip-200]: ./0200.md\n"}