{"text": "---\nid: 144\nstate: approved\ncreated: 2020-03-19\nupdated: 2022-06-02\nplacement:\n  category: fields\n  order: 50\n---\n\n# Repeated fields\n\nRepresenting lists of data in an API is trickier than it often appears. Users\noften need to modify lists in place, and longer data series within a single\nresource pose a challenge for pagination.\n\n## Guidance\n\nResources **may** use repeated fields where appropriate.\n\n```proto\nmessage Book {\n  option (google.api.resource) = {\n    type: \"library.googleapis.com/Book\"\n    pattern: \"publishers/{publisher}/books/{book}\"\n  };\n\n  string name = 1 [(google.api.field_behavior) = IDENTIFIER];\n\n  repeated string authors = 2;\n}\n```\n\n- Repeated fields **must** use a plural field name.\n  - If the English singular and plural words are identical (\"moose\", \"info\"),\n    the dictionary word **must** be used rather than attempting to coin a new\n    plural form.\n- Repeated fields **should** have an enforced upper bound that will not cause a\n  single resource payload to become too large. A good rule of thumb is 100\n  elements.\n  - If repeated data has the chance of being too large, the API **should** use\n    a sub-resource instead.\n- Repeated fields **must not** represent the body of another resource inline.\n  Instead, the message **should** provide the resource names of the associated\n  resources.\n\n### Scalars and messages\n\nRepeated fields **should** use a scalar type (such as `string`) if they are\ncertain that additional data will not be needed in the future, as using a\nmessage type adds significant cognitive overhead and leads to more complicated\ncode.\n\nHowever, if additional data is likely to be needed in the future, repeated\nfields **should** use a message instead of a scalar proactively, to avoid\nparallel repeated fields.\n\n### Update strategies\n\nA resource **may** use two strategies to enable updating a repeated field:\ndirect update using the [standard `Update`][aip-134] method, or custom `Add`\nand `Remove` methods.\n\nA standard `Update` method has one key limitation: the user is only able to\nupdate _the entire_ list. Field masks are unable to address individual entries\nin a repeated field. This means that the user must read the resource, make\nmodifications to the repeated field value as needed, and send it back. This is\nfine for many situations, particularly when the repeated field is expected to\nhave a small size (fewer than 10 or so) and race conditions are not an issue,\nor can be guarded against with [ETags][aip-154].\n\n**Note:** Declarative-friendly resources **must** use the standard `Update`\nmethod, and not introduce `Add` and `Remove` methods. If declarative tools need\nto reason about particular relationships while ignoring others, consider using\na subresource instead.\n\nIf atomic modifications are required, the API **should** define custom methods\nusing the verbs `Add` and `Remove`:\n\n**Note:** If both of these strategies are too restrictive, consider using a\nsubresource instead.\n\n```proto\nrpc AddAuthor(AddAuthorRequest) returns (Book) {\n  option (google.api.http) = {\n    post: \"/v1/{book=publishers/*/books/*}:addAuthor\"\n    body: \"*\"\n  };\n}\n\nrpc RemoveAuthor(RemoveAuthorRequest) returns (Book) {\n  option (google.api.http) = {\n    post: \"/v1/{book=publishers/*/books/*}:removeAuthor\"\n    body: \"*\"\n  };\n}\n```\n\n- The data being added or removed **should** be a primitive (usually a\n  `string`).\n  - For more complex data structures with a primary key, the API **should** use\n    a map with the `Update` method instead.\n- The RPC's name **must** begin with the word `Add` or `Remove`. The remainder\n  of the RPC name **should** be the singular form of the field being added.\n- The request message **must** match the RPC name, with a `Request` suffix.\n- The response message **should** be the resource itself, unless there is useful\n  context to provide in the response, in which case the response message must\n  match the RPC name, with a `Response` suffix.\n  - When the response is the resource itself, it **should** include the\n    fully-populated resource.\n- The HTTP verb **must** be `POST`, as is usual for [custom methods][aip-136].\n- The HTTP URI **must** end with `:add*` or `:remove*`, where `*` is the\n  snake-case singular name of the field being added or removed.\n- The request message field receiving the resource name **should** map to the\n  URI path.\n  - The HTTP variable **should** be the name of the resource (such as `book`)\n    rather than `name` or `parent`.\n  - That variable **should** be the only variable in the URI path.\n- The body clause in the `google.api.http` annotation **should** be `\"*\"`.\n- If the data being added in an `Add` RPC is already present, the method\n  **must** error with `ALREADY_EXISTS`.\n- If the data being removed in a `Remove` RPC is not present, the method\n  **must** error with `NOT_FOUND`.\n\n#### Request Message\n\n```proto\nmessage AddAuthorRequest {\n  // The name of the book to add an author to.\n  string book = 1 [\n    (google.api.field_behavior) = REQUIRED,\n    (google.api.resource_reference).type = \"library.googleapis.com/Book\"\n  ];\n\n  string author = 2 [(google.api.field_behavior) = REQUIRED];\n}\n\nmessage RemoveAuthorRequest {\n  // The name of the book to remove an author from.\n  string book = 1 [\n    (google.api.field_behavior) = REQUIRED,\n    (google.api.resource_reference).type = \"library.googleapis.com/Book\"\n  ];\n\n  string author = 2 [(google.api.field_behavior) = REQUIRED];\n}\n```\n\n- A resource field **must** be included. It **should** be the name of the\n  resource (such as `book`) rather than `name` or `parent`.\n  - The field **should** be [annotated as required][aip-203].\n  - The field **should** identify the [resource type][aip-123] that it\n    references.\n- A field for the value being added or removed **must** be included. It\n  **should** be the singular name of the field.\n  - The field **should** be [annotated as required][aip-203].\n- The request message **must not** contain any other required fields, and\n  **should not** contain other optional fields except those described in this\n  or another AIP.\n\n## Changelog\n\n- **2022-06-02:** Changed suffix descriptions to eliminate superfluous \"-\".\n- **2020-10-17**: Recommended returning the resource itself in Add and Remove\n  RPCs over separate response types.\n- **2020-10-17**: Added guidance for Add and Remove RPCs and requests.\n\n[aip-123]: ./0123.md\n[aip-134]: ./0134.md\n[aip-136]: ./0136.md\n[aip-154]: ./0154.md\n[aip-203]: ./0203.md\n"}