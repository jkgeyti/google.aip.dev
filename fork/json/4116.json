{"text": "---\nid: 4116\nscope: auth\nstate: draft\ncreated: 2021-01-06\n---\n\n# Identity Tokens\n\nIdentity Tokens (or ID Tokens) are JSON Web Tokens (JWT) with additional claims pertaining to the identity of the client or end-user (such as \"email\").  Which additional claims fields are included in the ID token are dependent on the ID\ntoken provider.\n\nThe **fetching** of ID tokens is used to:\n\n * request a [protected Cloud Run service][0], which requires a valid ID token in the `Authentication` header.\n * request an [IAP-protected resource][2], which requires a valid ID token in the `Authentication` header.\n\nThe **validation** of ID tokens should be done by:\n\n * services receiving an [authenticated PubSub push message][1] sent outside of Google Cloud.\n\n**Note:** Because this AIP describes guidance and requirements in a\nlanguage-neutral way, it uses generic terminology which may be imprecise or\ninappropriate in certain languages or environments.\n\n## Guidance\n\nThis section describes the general guidance of ID tokens as a means of\nauthentication.\n\n### ID tokens obtained by Application Default Credentials\n\nWhen a target audience is provided by the developer, [ADC][3] **should** fetch\nan ID token with the credentials provided. For example, if service account keys\nare provided, ADC will request an ID token from the OAuth token endpoint. If\n[virtual machine credentials][4] are provided, ADC will request an ID token from\nthe virtual machine server.\n\n### Expected Behavior for Fetching ID Tokens\n\nTo support fetching ID Tokens, the auth libraries **must** follow the steps\nbelow:\n\n1\\. Accept a target audience parameter when Application Default Credentials\nare requested. If a target audience and scope are both provided to the auth library, an exception **must** be thrown.\n\n2\\. Virtual machine credentials return the ID token retrieved from the metadata\nserver's `instance/service-accounts/default/identity` endpoint, setting the\n`audience` querystring parameter to the provided target audience.\n\n3\\. Service account Keys use the [JWT Bearer][5] grant type, and set the\n`target_audience` claim to the provided target audience. This will return a JSON\nobject containing an `id_token` key.\n\nUser Identity flows may be used to issue ID tokens, but are not required to.\n\n### Expected Behavior for Verifying ID Tokens\n\nTo support verifying ID Tokens, the auth libraries **must** provide a method to\nvalidate a JWT token which can do the following:\n\n1\\. Validate a JWT with an ES256 signature.\n2\\. Validate JWT `aud` claim against a user-provided audience.\n3\\. Validate JWT `exp` claim against the current timestamp.\n\n<!-- prettier-ignore-start -->\n[0]: https://cloud.google.com/run/docs/authenticating/service-to-service\n[1]: https://cloud.google.com/pubsub/docs/push#setting_up_for_push_authentication\n[2]: https://cloud.google.com/iap/docs/signed-headers-howto#securing_iap_headers\n[3]: https://google.aip.dev/auth/4110\n[4]: https://google.aip.dev/auth/4115\n[5]: https://tools.ietf.org/html/rfc7523\n<!-- prettier-ignore-end -->\n"}