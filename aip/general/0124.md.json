{"text":"---\nid: 124\nstate: approved\ncreated: 2020-03-20\nplacement:\n  category: resource-design\n  order: 40\n---\n\n# Resource association\n\nAPIs sometimes have resource hierarchies that can not be cleanly expressed in\nthe usual tree structure. For example, a resource may have a many-to-one\nrelationship with two other resource types instead of just one. Alternatively,\na resource may have a many-to-many relationship with another resource type.\n\n## Guidance\n\nA resource **must** have at most one canonical parent, and `List` requests\n**must not** require two distinct \"parents\" to work.\n\n### Multiple many-to-one associations\n\nIf a resource has a many-to-one relationship with multiple resource types, it\n**must** choose at most one of them to be the canonical parent. The resource\n**may** be associated with other resources through other fields on the\nresource.\n\n```proto\nmessage Book {\n  // The resource name pattern for Book indicates that Publisher is the\n  // canonical parent.\n  option (google.api.resource) = {\n    type: \"library.googleapis.com/Book\"\n    pattern: \"publishers/{publisher}/books/{book}\"\n  };\n\n  // The resource name for the book.\n  string name = 1 [(google.api.field_behavior) = IDENTIFIER];\n\n  // The resource name for the book's author.\n  string author = 2 [(google.api.resource_reference) = {\n    type: \"library.googleapis.com/Author\"\n  }];\n}\n```\n\nWhen listing resources with multiple associations in this way, the RPC **must**\ntreat the `string parent` field as required as discussed in [AIP-132][], and\n**must not** add additional required arguments. The RPC **should** include a\n`string filter` field that allows users to filter by other resource\nassociations as discussed in [AIP-160][].\n\n**Note:** Resource reference fields **must** accept the same resource name\nformat that is used in the `name` field of the referenced resource.\n\n### Many-to-many associations\n\nMany-to-many associations are less common in APIs than they are in relational\ndatabases, in part because they are more difficult to model and present over\nnetwork interfaces.\n\nAn API **may** contain many-to-many relationships, and **should** use a\nrepeated field containing a list of resource names, following the principles\ndescribed for repeated fields in [AIP-144][].\n\n```proto\nmessage Book {\n  option (google.api.resource) = {\n    type: \"library.googleapis.com/Book\"\n    pattern: \"publishers/{publisher}/books/{book}\"\n  };\n\n  string name = 1 [(google.api.field_behavior) = IDENTIFIER];\n\n  // The resource names for the book's authors.\n  repeated string authors = 2 [(google.api.resource_reference) = {\n    type: \"library.googleapis.com/Author\"\n  }];\n}\n```\n\n**Note:** See [AIP-144][] for more information on repeated fields, including\nhow to handle common issues such as atomic changes.\n\nIf the use of a repeated field is too restrictive, or if more metadata is\nrequired along with the association, an API **may** model a many-to-many\nrelationship using a sub-resource with two one-to-many associations.\n\n```proto\nmessage BookAuthor {\n  // The resource pattern for BookAuthor indicates that Book is the\n  // canonical parent.\n  option (google.api.resource) = {\n    type: \"library.googleapis.com/BookAuthor\"\n    pattern: \"publishers/{publisher}/books/{book}/authors/{book_author}\"\n  };\n\n  // The resource name for the book-author association.\n  string name = 1 [(google.api.field_behavior) = IDENTIFIER];\n\n  // The resource name for the author.\n  string author = 2 [(google.api.resource_reference) = {\n    type: \"library.googleapis.com/Author\"\n  }];\n\n  // Other fields...\n}\n```\n\n**Note:** Using subresources to model an association between resources is only\nrecommended if additional metadata is required in the relationship, or if the\nrestrictions around the use of a repeated field preclude the use of that\napproach.\n\n[aip-132]: ./0132.md\n[aip-144]: ./0144.md\n[aip-160]: ./0160.md\n\n## Changelog\n\n- **2021-04-07**: Clarified that resource reference fields accept resource\n  names with the same format as the `name` field of the resource.\n"}
