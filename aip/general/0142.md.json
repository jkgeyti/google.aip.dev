{"text":"---\nid: 142\nstate: approved\ncreated: 2019-07-16\nplacement:\n  category: fields\n  order: 30\n---\n\n# Time and duration\n\nMany services need to represent the concepts surrounding time. Representing\ntime can be challenging due to the intricacies of calendars and time zones, as\nwell as the fact that common exchange formats (such as JSON) lack a native\nconcept of time.\n\n## Guidance\n\nFields representing time **should** use the common, generally used components\n(such as [`google.protobuf.Timestamp`][timestamp] or\n[`google.type.Date`][date]) for representing time or duration types. These\ntypes are [common components][aip-213], and using them consistently allows\ninfrastructure and tooling to provide a better experience when interacting with\ntime values.\n\n### Timestamps\n\nFields that represent an absolute point in time (independent of any time zone\nor calendar) **should** use the [`google.protobuf.Timestamp`][timestamp] type,\n(which uses UNIX timestamps under the hood and hold nanosecond precision).\n\nThese fields **should** have names ending in `_time`, such as `create_time` or\n`update_time`. For repeated fields, the names **should** end in `_times`\ninstead.\n\nMany timestamp fields refer to an activity (for example, `create_time` refers\nto when the applicable resource was created). For these, the field **should**\nbe named with the `{imperative}_time` form. For example, if a book is being\npublished, the field storing the time when this happens would use the\nimperative form of the verb \"to publish\" (\"publish\") resulting in a field\ncalled `publish_time`. Fields **should not** be named using the past tense\n(such as `published_time`, `created_time` or `last_updated_time`).\n\n### Durations\n\nFields that represent a span between two points in time (independent of any\ntime zone or calendar) **should** use the\n[`google.protobuf.Duration`][duration] type.\n\nTo illustrate the distinction between timestamps and durations, consider a\nflight record:\n\n```proto\n// A representation of a (very incomplete) flight log.\nmessage FlightRecord {\n  // The absolute point in time when the plane took off.\n  google.protobuf.Timestamp takeoff_time = 1;\n\n  // The length (duration) of the flight, from takeoff to landing.\n  google.protobuf.Duration flight_duration = 2;\n}\n```\n\n**Note:** Observant readers may notice that the [timestamp][] and [duration][]\nmessages have the same structure (`int64 seconds` and `int32 nanos`). However,\nthe distinction between these is important, because they have different\nsemantic meaning. Additionally, tooling is able to base behavior off of which\nmessage is used. For example, a Python-based tool could convert timestamps to\n[datetime][py_datetime] objects and durations to [timedelta][py_timedelta]\nobjects.\n\n### Relative time segments\n\nIn some cases, it may be necessary to represent a time segment inside a stream.\nIn these cases, the [`google.protobuf.Duration`][duration] type **should** be\nused, and the field name **should** end with `_offset`. To ensure that the\nmeaning is clear, the field **must** have a comment noting the point that the\noffset is relative to.\n\nTo illustrate this, consider a resource representing a segment of an audio\nstream:\n\n```proto\nmessage AudioSegment {\n  // The duration relative to the start of the stream representing the\n  // beginning of the segment.\n  google.protobuf.Duration start_offset = 1;\n\n  // The total length of the segment.\n  google.protobuf.Duration segment_duration = 2;\n}\n```\n\n### Civil dates and times\n\nFields that represent a calendar date or wall-clock time **should** use the\nappropriate common components:\n\n- Civil date: [`google.type.Date`][date]\n- Wall-clock time: [`google.type.TimeOfDay`][time_of_day]\n\nFields representing civil dates **should** have names ending in `_date`, while\nfields representing civil times or datetimes **should** have names ending in\n`_time`.\n\n**Note:** Both the `Date` and `TimeOfDay` components are timezone-na√Øve. Fields\nthat require timezone-awareness **should** use `DateTime` (see below).\n\n### Civil timestamps\n\nFields that represent a civil timestamp (date and time, optionally with a time\nzone) **should** use the [`google.type.DateTime`][datetime] component, and the\nfield name **should** end in `_time`.\n\n### Compatibility\n\nOccasionally, APIs are unable to use the common structures for legacy or\ncompatibility reasons. For example, an API may conform to a separate\nspecification that mandates that timestamps be integers or [ISO-8601][]\nstrings.\n\nIn these situations, fields **may** use other types. If possible, the following\nnaming conventions apply:\n\n- For integers, include the meaning (examples: `time`, `duration`, `delay`,\n  `latency`) **and** the unit of measurement (valid values: `seconds`,\n  `millis`, `micros`, `nanos`) as a final suffix. For example,\n  `send_time_millis`.\n- For strings, include the meaning (examples: `time`, `duration`, `delay`,\n  `latency`) but no unit suffix.\n\nIn all cases, clearly document the expected format, and the rationale for its\nuse.\n\n<!-- prettier-ignore-start -->\n[aip-213]: ./0213.md\n[date]: https://github.com/googleapis/googleapis/blob/master/google/type/date.proto\n[datetime]: https://github.com/googleapis/googleapis/blob/master/google/type/datetime.proto\n[duration]: https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/duration.proto\n[iso-8601]: https://www.iso.org/iso-8601-date-and-time-format.html\n[py_datetime]: https://docs.python.org/3/library/datetime.html#datetime.datetime\n[py_timedelta]: https://docs.python.org/3/library/datetime.html#datetime.timedelta\n[time_of_day]: https://github.com/googleapis/googleapis/blob/master/google/type/timeofday.proto\n[timestamp]: https://github.com/protocolbuffers/protobuf/blob/master/src/google/protobuf/timestamp.proto\n<!-- prettier-ignore-end -->\n"}
