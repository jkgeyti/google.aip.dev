{"text":"---\nid: 192\nstate: approved\ncreated: 2019-07-25\nplacement:\n  category: polish\n  order: 20\n---\n\n# Documentation\n\nDocumentation is one of the most critical aspects of API design. Users of your\nAPI are unable to dig into the implementation to understand the API better;\noften, the API surface definition and its corresponding documentation will be\nthe only things a user has. Therefore, it is important that documentation be as\nclear, complete, and unambiguous as possible.\n\n## Guidance\n\nIn APIs defined in protocol buffers, public comments **must** be included over\nevery component (service, method, message, field, enum, and enum value) using\nthe protocol buffers comment format. This is important even in cases where the\ncomment is terse and uninteresting, as numerous tools read these comments and\nuse them.\n\nServices, in particular, **should** have descriptive comments that explain what\nthe service is and what users are able to do with it.\n\n**Note:** Many readers will not be native English speakers. Comments **should**\navoid jargon, slang, complex metaphors, pop culture references, or anything\nelse that will not easily translate. Additionally, many readers will have\ndifferent backgrounds and viewpoints; if writing examples involving people,\ncomments **should** use people who are non-controversial and no longer alive.\n\n### Style\n\nComments **should** be in grammatically correct American English. However, the\nfirst sentence of each comment **should** omit the subject and be in the\nthird-person present tense:\n\n```proto\n// Creates a book under the given publisher.\nrpc CreateBook(CreateBookRequest) returns (Book) {\n  option (google.api.http) = {\n    post: \"/v1/{parent=publishers/*}/books\"\n    body: \"book\"\n  };\n}\n```\n\n### Descriptions\n\nDescriptions of messages and fields **should** be brief but complete. Sometimes\ncomments are necessarily perfunctory because there is little to be said;\nhowever, before jumping to that conclusion, consider whether some of the\nfollowing questions are relevant:\n\n- What is it?\n- How do you use it?\n- What does it do if it succeeds? What does it do if it fails?\n- Is it idempotent?\n- What are the units? (Examples: meters, degrees, pixels)\n- What are the side effects?\n- What are common errors that may break it?\n  - What is the expected input format?\n  - What range of values does it accept? (Examples: `[0.0, 1.0)`, `[1, 10]`)\n    - Is the range inclusive or exclusive?\n  - For strings, what is the minimum and maximum length, and what characters\n    are allowed?\n    - If a value is above the maximum length, do you truncate or send an error?\n- Is it always present? (Example: \"Container for voting information. Present\n  only when voting information is recorded.\")\n- Does it have a default setting? (Example: \"If `page_size` is omitted, the\n  default is 50.\")\n\n### Formatting\n\nAny formatting in comments **must** be in [CommonMark][]. Headings and tables\n**must not** be used, as these cause problems for several tools, and are\nunsuitable for client library reference documentation.\n\nComments **should** use `code font` for field or method names and for literals\n(such as `true`).\n\nRaw HTML **must not** be used.\n\n\"ASCII art\" attempts to present a diagram within the protos **must not** be\nused. The Markdown within the protos is consumed by a large number of renderers,\nand any ASCII art is very unlikely to be well-presented by all of them. If\na diagram is useful in order to understand the API, include a link to a\ndocumentation page containing the diagram as an image.\n\n### Cross-references\n\nComments **may** \"link\" to another component (service, method, message, field,\nenum, or enum value) by using the fully-qualified name of the element as a\nMarkdown reference link. For example: `[Book][google.example.v1.Book]`\n\n### External links\n\nComments **may** link to external pages to provide background information\nbeyond what is described in the public comments themselves. External links\n**must** use absolute (rather than relative) URLs, including the protocol\n(usually `https`), and **should not** assume the documentation is located on\nany particular host. For example:\n`[Spanner Documentation](https://cloud.google.com/spanner/docs)`\n\n### Trademarked names\n\nWhen referring to the proper, trademarked names of companies or products in\ncomments, acronyms **should not** be used, unless the acronym is such dominant\ncolloquial use that avoiding it would obscure the reference (example: [IBM][]).\n\nComments **should** spell and capitalize trademarked names consistent with the\ntrademark owner's current branding.\n\n### Deprecations\n\nTo deprecate a component (service, method, message, field, enum, or enum value),\nthe `deprecated` [option](https://developers.google.com/protocol-buffers/docs/proto#options)\n**must** be set to `true`, and the first line of the respective comment\n**must** start with `\"Deprecated: \"` and provide alternative solutions for\ndevelopers. If there is no alternative solution, a deprecation reason **must**\nbe given.\n\n### Internal comments\n\n<!-- TODO: This does not work outside of Google.\n           We should probably try to get that fixed. -->\n\nComments **may** be explicitly marked as internal by wrapping internal content\nin `(--` and `--)`.\n\nNon-public links, internal implementation notes (such as `TODO` and `FIXME`\ndirectives), and other such material **must** be marked as internal.\n\n**Note:** Comments **should** use only leading comments (not trailing comments\nor detached comments). In particular, comments **must not** use both a leading\nand trailing comment to describe any component, because this is a common source\nof inadvertent omissions of the internal content annotation.\n\n[commonmark]: https://commonmark.org/\n[ibm]: https://en.wikipedia.org/wiki/IBM\n\n## Changelog\n\n- **2023-08-11**: Expand deprecated comment requirement to all components.\n- **2021-04-20**: Added guidance for deprecated services and RPCs.\n- **2020-04-01**: Added guidance requiring absolute URLs for external links.\n- **2020-02-14**: Added guidance around the use of trademarked names.\n- **2019-09-23**: Added guidance about not using both leading and trailing\n  comments.\n- **2019-08-01**: Changed the examples from \"shelves\" to \"publishers\", to\n  present a better example of resource ownership.\n"}
