{"text":"---\nid: 157\nstate: approved\ncreated: 2019-01-26\nplacement:\n  category: design-patterns\n  order: 50\n---\n\n# Partial responses\n\nSometimes, a resource can be either large or expensive to compute, and the API\nneeds to give the user control over which fields it sends back.\n\n## Guidance\n\nAPIs **may** support partial responses in one of two ways:\n\n### Field masks parameter\n\nField masks (`google.protobuf.FieldMask`) can be used for granting the user\nfine-grained control over what fields are returned. An API **should** support the mask in a side channel.\nFor example, the parameter can be specified either using an HTTP query\nparameter, an HTTP header, or a [gRPC metadata entry][1]. Google Cloud APIs specify field masks as a [system parameter][0].\n\nField masks **should not** be specified in the [request](./0157.md#read-masks-as-a-request-field).\n\n- The value of the field mask parameter **must** be a `google.protobuf.FieldMask`.\n- The field mask parameter **must** be optional:\n  - An explicit value of `\"*\"` **should** be supported, and **must** return all\n    fields.\n  - If the field mask parameter is omitted, it **must** default to `\"*\"`, unless otherwise documented.\n- An API **may** allow read masks with non-terminal repeated fields (unlike\n  update masks), but is not obligated to do so.\n\n**Note:** Changing the default value of the field mask parameter is a [breaking change](../0180.md#semantic-changes).\n\n### View enumeration\n\nAlternatively, an API **may** support partial responses with view enums.\nView enums are useful for situations where an API only wants to expose a small\nnumber of permutations to the user:\n\n```proto\nenum BookView {\n  // The default / unset value.\n  // The API will default to the BASIC view.\n  BOOK_VIEW_UNSPECIFIED = 0;\n\n  // Include basic metadata about the book, but not the full contents.\n  // This is the default value (for both ListBooks and GetBook).\n  BOOK_VIEW_BASIC = 1;\n\n  // Include everything.\n  BOOK_VIEW_FULL = 2;\n}\n```\n\n- The enum **should** be specified as a `view` field on the request message.\n- The enum **should** be named something ending in `-View`\n- The enum **should** at minimum have values named `BASIC` and `FULL` (although\n  it **may** have values other than these).\n- The `UNSPECIFIED` value **must** be valid (not an error), and the API\n  **must** document what the unspecified value will do).\n  - For List RPCs, the effective default value **should** be `BASIC`.\n  - For Get RPCs, the effective default value **should** be either `BASIC` or\n    `FULL`.\n- The enum **should** be defined at the top level of the proto file (as it is\n  likely to be needed in multiple requests, e.g. both `Get` and `List`). See\n  [AIP-126][] for more guidance on top-level enumerations.\n- APIs **may** add fields to a given view over time. APIs **must not** remove a\n  field from a given view (this is a breaking change).\n\n  **Note:** If a service requires (or might require) multiple views with\n  overlapping but distinct values, there is a potential for a namespace\n  conflict. In this situation, the service **should** nest the view enum within\n  the individual resource.\n\n### Read masks as a request field\n\n**Warning:** Read masks as a single field on the request message, for example: `google.protobuf.FieldMask read_mask` are **DEPRECATED**.\n\n## Changelog\n\n- **2023-05-09**: Fix top-level enum example and link to AIP-126.\n- **2022-03-14:** Updated guidance on default value and how to specify a read mask.\n- **2021-10-06:** Updated the guidance with system parameters.\n- **2021-03-04:** Added guidance for conflicting view enums.\n\n[0]: https://cloud.google.com/apis/docs/system-parameters\n[1]: https://grpc.io/docs/what-is-grpc/core-concepts/#metadata\n[AIP-126]: ./0126.md"}
